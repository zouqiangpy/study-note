数据结构:
    计算机存储,组织数据的方式.数据结构是指相互之间存在一种或多种特定关系的数据元素的集合.通常情况下,精心选择的数据结构可以带来更高的运行或存储效率.数据结构往往同高效的检索算法和索引技术有关.
     常用的数据结构:堆栈.队列.数组.列表.红黑树.

一.栈.(想象细瓶子装鸡蛋)
  stack又称堆栈,它是运算受限的线性表,其限制是仅允许在表的一端进行插入和删除操作,不允许在其他任何位置进行添加,查找,删除等操作.
  名词解释:
     入栈/压栈,就是存元素,即,把元素存储到栈的顶端,栈中所有元素依次向栈底移动一个位置.
     出栈/弹栈,就是取元素.即把栈顶元素取出,栈中所有元素依次向栈顶方向移动一个位置
  特点:
     1.栈的入口,出口都在栈顶端位置.
     2.先进后出.先出后入.

二.队(想象动车排队检票)
  queue,队列,简称队.它也是一种运算受限的线性表.其限制是仅允许在一端进行插入操作,而在另一端进行删除操作.
  特点:
     1.先进先出.
     2.出口,进口分别在队列的一端.

三.数组(想象一排出租屋,每个房间有自己的编号)
  Array,是有序的元素序列,数组是在内存中开辟的一段连续的空间用于存放数据.就像是一排出租屋,每个房间有自己的编号,通过编号可以快速的查找房间.
  注意:数组使定长的.
  特点:
     1.查找元素快.通过索引查找元素(直接一步找到元素).非常快速.
     2.增删元素慢.
       举例: 
       (1)创建一个存储内容为1,2,3的数组.
          如果要在第二个位置加一个5.要经历以下几步.
            a.创建一个存储空间为4的数组,
            b.找到第二个位置,并填充为5.
            c.把原数组中其它内容拷贝回来.
       (2)同理要想把第二个位置的2删除,要经历以下几步.
            a.找到第二个位置.
            b.创建一个存储空间为2的数组.
            c.把原数组的其它内容拷贝过来.
    
四.链表.(想象特务(结点).每一级都只有下一级的联系方式(指针)(其它人都不知道))
  linked.list,由一系列结点node(链表中每个元素成为结点)组成,结点可以在运行时动态生成,每一个结点包括两部分,一部分是存储数据的数据域,另一部分是存储下一节点地址的指针域.通常所说的链表有双向链表和单向链表,这里只介绍双向链表.
  特点:
    1.多个结点之间通过地址进行连接,
    2.查找数据慢.(相对来说)
      举例.
      (1)有一个5个结点的链表.
         要找到第3个结点.
           a.只能先找第一个元素,通过第一个元素找第二个元素,再通过第二个元素找第三个元素,
    3.增删数据快.(相对来说)
      举例.
      (1)有一个5个结点的链表.
         要删除第3个结点,.
           a.删除第二个结点和第三个结点的指针(指向下一节点的地址),使第二个结点指向第四个结点即可.    

五.红黑树(为了提高查找速度,了解)
  二叉树:binary tree,是每个结点不超过2的有序树(tree),顶上的叫跟结点,两边被称子树",和"右子树"
  简单的理解,就是一种类似于我们生活中树的结构,只不过每个节点上都最多只能有两个子结点.
      