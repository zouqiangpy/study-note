   
     java提供了两种类型,包装类和基本类型,使用基本类型在于效率,然后很多时候需要把基本类型像对象一样操作(有各种调用函数),这时候就需要包装.
     int(Integer)    char(Character)

  
装箱:将基本类型装换为包装类对象.
拆箱:将包装类对象转换为基本类型.

手动装箱与拆箱
    装箱: int a=10;
          Integer b=Integer.valueOf(a);
    拆箱: int c=b.intvalue();

编译器1.5以后,会自动完成装箱和拆箱的过程.
    自动装箱:Integer a=10;
             (基本类型并不能直接赋值给引用类型,隐藏着一步操作,Integer .valueOf(10))
    自动拆箱:int b=a;
             (隐藏着一步操作,a.intValue();)

注意:包装类型不能直接相加.相加是会自动转换为int.
     Integer a=4; //自动装箱操作

     c=a+5;//先自动拆箱,再自动装箱.