一.登录,注册这里不再多说.
   
二.create resipostory.
   license:不同的协议.不同的协议代表不同的要求行为,也可以不选.

三.将本地库的内容上传远程库.
   
   在本地库创建远程库地址别名.
   1.获取远程库的地址:
   2.建立远程库和本地库的联系.
      git remote add [地址]
    
     因为这个地址有点长,可以起一个别名:
      git remote add  [别名] [地址]   //
  
   3.正式上传到远程库.
     git push [地址别名] [分支名]; (如果只有一个远程库,不用加地址别名和分支名)

     注意:这个命令执行的前提是本地库的版本和远程库的版本保持一致,才能执行成功,否则就会报错,那么发生版本不一致的原因也就是别人提交了更新操作,生成了新的版本.

四.从远程库克隆.
   1.使用.
     a.跳到存储的文件中
     b.使用命令:
       git clone [地址];
   2.克隆相当于做了以下三个操作:
     a.把远程库完整下载到本地库.
     b.建立远程库的别名.
     c.初始化本地库.
      
     

五.从远程库拉取,更新.
   1.使用:
      git pull [地址别名] [分支名].(如果只有一个远程库,不用加地址别名和分支名)
  
   2.pull相当于做了以下两个操作.
     a.git fetch [地址别名] [分支名]:将远程库的一些改动拉取下来.(在这一步之后,可以使用diff命令查看差异)
     b.git merge [地址别名] [分支名]:将远程库的改动与本地库合并.(应该是只有拉取下来才能合并呢,也可以自己实验一下直接合并行不行)
     那么也就是自己可以不使用pull(会直接合并变动)

六.冲突操作.
   当一个人小王提交了push操作,它执行的前提就是本地库和远程库的版本要一致,那如果在这期间其他人小蓝更新了版本,小王再提交时就会产生冲突.
   解决方法:
     1.git pull.
     2.当然这个pull会失败,会处于合并状态中.
     3.然后我们vim这个文件,把特殊符号去掉.
     4.添加缓存,添加本地,添加远程即可.




说明:一个本地库可以对应多个远程库.


常用命令:
  1.git remote -v: 查看别名和远程库.
  2.git remote add [地址别名] [地址]:建立远程库和本地库的联系.
  3.git push [地址别名] [分支名]: 正式把文件添加到远程库
  4.git clone [地址名]:从远程库克隆.
  5.git pull [地址名] [分支名] :从远程库拉取,更新.
  6.rm -rf [文件名]:删除该文件下所有的文件,-r 代表所有,f代表不需要想用户一一确认,直接删除.这是个及其危险的命令.
  7.git fetch [地址别名] [分支名]:将远程库的一些改动拉取下来
  8.git merge [地址别名] [分支名]:将远程库的改动与本地库合并.(应该是只有拉取下来才能合并呢,也可以自己实验一下直接合并行不行)
   
   
