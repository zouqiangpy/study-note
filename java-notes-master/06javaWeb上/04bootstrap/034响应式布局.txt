响应式布局:同一套页面可以分辨不同的分辨率的设备.
  一.实现:   
        依赖于栅格系统,将一行平均分为12个格子,可以指定元素在不同分辨率下通过样式来指定占多少个格子.
     原理:
        即同比放大,任何类型的屏幕都被分为12个格子,而不同屏幕的格子宽度不一样
        比如一个元素在PC端占6个格子,在手机端占12个格子.

     1.步骤:(均是对class进行操作)
          a.定义容器:可以理解为table
              容器分类:container,      cantainer-fluid           
                区别:
                   container: 两边有空白.用于固定宽度并支持响应式布局的容器.
                      固定宽度就是在xs上自动占满,  在sm上固定占750px.
                                  在md上固定970px, 在lg上固定占1170px.
                   container-fluid:用于100%宽度(不能什么大小的屏幕),占据全部适口的容器.
         
          b.定义行:可以理解为tr
              样式通过row.
          c.定义元素:
              样式:col-设备代码-格子数目.    即指定这个元素在不同的设备上锁占据的格子数
                设备代码:
                  xs:超小屏幕.手机(<768px)
                  sm:小屏幕 平板(>=768px)
                  md:中等屏幕.桌面显示器(>=992px)
                  lg:大屏幕.大桌面显示器(>=1200px)


   例子:
     <div class="container">
         <div class="row">
             <div class="col-lg-2  col-md-4">格子一</div>
             <div class="col-lg-2  col-md-4">格子二</div>
             <div class="col-lg-2  col-md-4">格子三</div>
             <div class="col-lg-2  col-md-4">格子四</div>
             <div class="col-lg-2  col-md-4">格子五</div>
             <div class="col-lg-2  col-md-4">格子六</div>
        </div>
    </div>

二.注意事项:
   1.一行中如果格子数目超过12个,则超出部分自动换行.
   2.用 12/(一个元素指定的格子数)  就是一行能显示的元素数目.
   3.栅格类属性可以向上兼容.适用于屏幕宽度大于或等于分界点的大小的设备.
     (就是在小设备上一个元素占3格,在大设备上一个元素还是占3格)
   4.向下并不兼容,如果真实设备宽度小于所设置的设备像素宽度的最小值,会自动一个元素占满一行.
     例: 
       <div class="col-lg-4"> 在lg上一个元素占4格.
       当设备小于lg的最小设备宽度1200px时.一个元素会自动占满12格.
     
  