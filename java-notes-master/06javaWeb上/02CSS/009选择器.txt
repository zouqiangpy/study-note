基本选择器:
  1.id选择器
    语法:#id名称{
           属性名:属性值;
         }
    说明:在标签中指定id,每个id在一个文档中都是唯一的
  
  2.类选择器(可以重复)
    语法: .类名{
           属性名:属性值;
          }
    说明:在标签中指定class=""名称.

  3.元素选择器
    语法:标签名称{
           属性名:属性值;
         }
    说明:这种方式也可以选择有嵌套关系的标签
  
  注意:这三种方式其实也是作用范围越来越大.优先级越来越低.


扩展选择器:
  1.所有选择器:
    选择所有元素,进行格式设置
    格式:*{
           属性名:属性值;  
         }

  2.并集选择器:
    选择两个及两个以上元素进行格式设置.
    格式:元素1,元素2{             //元素就是标签
           属性名:属性值;
         }
    例:
       div,span{
           color:hotpink;
       }
       <span>这是span标签</span>
       <div>这是div标签</div>
 
    
  3.子选择器
    格式:父元素 子元素{
           属性名:属性值;
         }
    例:
      div span{            选择div元素中的所有span元素.
         color: hotpink;
      }

      <div>
      <span>1</span>
      <p>
          <span>2</span>
      </p>
      </div>    
      结果:1和2都变成粉红色.  
  
   4.父类选择器.(父元素的直接子元素)
     格式:父元素>子元素{
            属性名:属性值;
          }
     例:
       div>span{            选择所有span元素中的父级div元素.
         color: hotpink;
       }

       <div>
       0
       <span>1</span>
       <p>
           <span>2</span>
       </p>
       </div>   
       结果:只有1变粉红色.
     说明:父级指的是他的直接嵌套者.第二个<span>标签的父级是<p>.

       为什么0没有变粉红色呢?  因为这种父类选择器选的必须父类和子类同时包裹的.
       怎样才能控制0的格式?    直接选择div元素即可控制.
  
   5.属性选择器:
     对某一个元素的属性进行精确的控制.
     格式:元素[类型=某一个属性]{
          
          }
     例:
       input[type="text"]{
           border:5px red solid;   //边框设置,联合属性,不能只设置宽度
       }
       <input type="text" name="account"> 
     说明:[]里也可以只写type,代表设置所有type类的属性.

   6.伪类选择器.
     选择元素的一种状态:(比如有超链接的语句)
     举例:
     <a>状态:
        a.正常状态:link
        b.悬浮状态:hover
        c.激活状态:active
        d.访问过的状态:visited
     例:
        <a href="内联样式.html">这里有一个超链接哦</a>
       
        a:link{
          color:black;
        }
        a:hover{
          color:red;
        }
        a:active {
          color:blue;
        }
        a:visited{
          color:chartreuse;
        }
    说明:其他元素的状态是不一样的.具体需要看文档.
  
     
    

 





