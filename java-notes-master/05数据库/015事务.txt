
一.事务:多个事件形成不可分割的一个整体(原子性).一旦其中一条sql语句出现异常,就全部回滚,执行失败.所有的SQL语句必须全部执行成功.
     
    比如:在实际开发中,一个业务操作如:转账,往往是要多次访问数据库才能完成的.转账就是一个用户扣钱.另一个用户加钱.如果其中有一条sql语句出现异常.整个sql就可能执行失败.

二.数据库事务:
  MySQL中可以有两种方式进行事务的操作.
     1.手动提交事务
     2.自动提交事务
  手动提交事务的SQL语句:
    开启事务:start transcation;
    提交事务:commit;
    回滚事务:rollback;(回滚之后也需要提交才可以结束事务)

三.流程如下:
                                        开启事务
                    
                                       执行SQL语句
        
       

            执行成功                                                         执行失败
在一个用户端可以看到变动成功,真正的数据库的数据没有变                在用户端看到数据变动失败
  
           提交事务                                                         回滚事务(之后提交结束事务)


四.事务的隔离性 
      当开启一个事务后(start transaction),每个用户对数据库中的数据所做的操作在没有提交之前,是不会真正的改变数据库中的数据的.
   commit之后才会改变.叫做隔离性.
      在SQL语句执行成功并且没有提交的阶段,在本地可以看到数据改变,这时真正的数据库数据还没有改变.

五.模拟事务(用cmd窗口)
   登陆数据库: mysql -uroot -proot

六.事务的原理:记录日志
   1.客户端连接服务端服务器,创建连接时创建此用户临时日志文件.
   2.开启事务后,所有的操作都会先写入到临时日志文件中.
   3.所有的查询都会从真正的数据库表中查询.但会经过日志文件加工后才返回.
   4.如果事务提交,则将临时日志文件中的数据写入到数据库中,否则则清空临时文件.

七.检查点.回滚点(必须在一个事务中才能设置)
   在某些成功的操作完成之后,后面的操作可能成功,也可能失败.但是不管是否成功或失败,前面的操作已经成功.可以在当前成功的位置设置一个回滚点.可以供后续失败操作返回该位置,而不是返回所有操作,这个点称之为回滚点.
   设置回滚点/检查点:savepoint 名字
   回滚检查点:rollback to 名字
   