范式:
   好的数据库设计对数据的存储性能和后期的程序开发,都会产生重要的影响.建立科学的,规范的数据库就需要满足一些规则来优化数据的设计和存储.这些规则就称为范式.      
   目前关系数据库有六种范式:第一范式(1nf).第二范式(2NF).第二范式(3NF).巴斯-科德范式(BCNF).第四范式(4NF)和第五范式(5NF,又称完美范式)
   满足最底要求的范式就是第一范式.在第一范式的基础上进一步满足更多规范要求的称为第二范式,其余范式一次类推.一般说来,数据库只需满足第三范式就行了.
   



第一范式(1NF):
   数据库表中的每一列都是不可分割的原子数据项,不能是集合,数组等非原子数据项.即表中的某个列有多个值时,必须拆分为不同的列.简而言之,第一范式就是,每一列不可再拆分,称为原子性.

第二范式(2NF):
  在满足第一范式的前提下,表中的每一个字段都完全依赖主键,而不止依赖主键的一部分.
  比如一个主键有两个列,存在这样的属性,它只依赖于其中一个列.就不符合第二范式.
  总之,第二范式:a.一张表只描述一件事情.(比如一张表只描述和学生证相关的事,而不和借书证合在一起)
                b.表中的每一列都完全依赖于主键. 

第三范式:
   在表中的第二范式的前提下,表中的某一列都直接依赖于主键,而不是通过其他的列来间接依赖于主键.简而言之就是所有列不依赖于其他非主列项.
   比如,一张表中有id,name,所在院校,院校地址.
      说明:院校地址是依赖于所在院校的,而不是依赖于主键id的,正确的做法是分成两个表.通过主外键来约束.


总结:
  1NF:原子性:表中每列不可再拆分.
  2NF:不产生局部依赖,一张表只描述一件事情.
       比如一张表描述学生,还有各种数学,语文成绩等,不合适.
  3NF:不产生传递依赖,表中每一列都直接依赖于主键,而不是通过其他列间接依赖于主键.
  