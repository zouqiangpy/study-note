抽象方法:没有方法体的方法
抽象类:含有抽象方法的类

抽象方法:使用abstract关键字修饰方法,该方法就成了抽象方法,该方法没有方法体,只有一个方法名

         定义格式: 修饰符 abstract 返回值 方法名();   (注意:没有大括号)
抽象类:类中必须含有一个抽象方法,且类也用abstract修饰.
       例:
         public abstrsct class Animal{
		public abstract void run();
         }
抽象的使用:(抽象类不能new 对象)
    1.继承抽象类的子类必须重写父类所有的抽象方法
    2.否则,该子类也必须声明为抽象类
    3.最终,必须有子类实现父类的抽象方法,否则从最初的子类到最终的父类都不能创建对象.
注意细节:
    1.抽象类不能创建对象,只能创建非抽象子类的对象
      理解:如果抽象类创建对象,对象调用没有方法体的方法,没有意义

    2.抽象类中可以有构造方法,是为了子类创建对象,初始化父类成员使用的
      理解:抽象类子类构造方法中,默认有super(),会创建父类对象,初始化父类成员

    3.抽象类中不一定含有抽象方法,但含有抽象方法的一定是抽象类.
       理解:不含有抽象方法的抽象类,目的就是不想让调用者创建该类对象,通常用于某些特定的结构类设计
 
    4.抽象类的子类必须重写父类中所有抽象方法,否则也必须声明为抽象类.
      理解:如果不重写,调用没有方法的方法体,也没有意义